{
    "patches": [
        {
            "label": "2025-10-01_19-50-49",
            "content": "# questCalculadora\n\nclass Calculator:\n    def __init__(self, display: float, battery: int, batteryMax: int):\n        self.display: float = display\n        self.battery: int = battery\n        self.batteryMax: int = batteryMax\n\n    def Calculator(self, batteryMax: int):\n        self.display = 0\n        self.battery = 0\n\n    def __str__(self):\n        return f\"display = {self.display:.2f}, battery = {self.battery}\"\n\n    def show(self):\n        print(self.__str__())\n\n    def charge(self, increment):\n        if increment < 0:\n            return\n        self.battery += increment\n        if self.battery > self.batteryMax:\n            self.battery = self.batteryMax\n\n    def sum(self, a: float, b: float):\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        self.display = a + b\n        self.battery -= 1\n\n    def div(self, a: float, b: float):\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        if b == 0:\n            print(\"fail: divisao por zero\")\n            self.battery -= 1\n            return\n        self.display = a / b\n        self.battery -= 1\n\n\ndef main():\n    calc = Calculator(0, 0, 0)\n    while True:\n        line = input()\n        print(f\"${line}\")\n        args = line.split()\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            batteryMax = int(args[1])\n            calc = Calculator(0, 0, batteryMax)\n        elif args[0] == \"show\":\n            calc.show()\n        elif args[0] == \"charge\":\n            inc = int(args[1])\n            calc.charge(inc)\n        elif args[0] == \"sum\":\n            a = float(args[1])\n            b = float(args[2])\n            calc.sum(a, b)\n        elif args[0] == \"div\":\n            a = float(args[1])\n            b = float(args[2])\n            calc.div(a, b)\n        else:\n            print(\"fail: comando invalido\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "74"
        }
    ]
}