{
    "patches": [
        {
            "label": "2025-10-01_19-50-34",
            "content": "class Car:\n    def __init__(self):\n        self.pass_ = 0\n        self.km = 0\n        self.passMax = 2\n        self.gas = 0\n        self.gasMax = 100\n\n    def __str__(self):\n        return f\"pass: {self.pass_}, gas: {self.gas}, km: {self.km}\"\n\n    def show(self):\n        print(self.__str__())\n\n    def enter(self):\n        if self.pass_ < self.passMax:\n            self.pass_ += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n\n    def leave(self):\n        if self.pass_ > 0:\n            self.pass_ -= 1\n        else:\n            print(\"fail: nao ha ninguem no carro\")\n\n    def fuel(self, increment):\n        if increment < 0:\n            return\n        self.gas += increment\n\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax\n\n    def drive(self, distance):\n        if self.pass_ == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n\n        if self.gas == 0:\n            print(\"fail: tanque vazio\")\n            return\n\n        if distance <= self.gas:\n            self.gas -= distance\n            self.km += distance\n        else:\n            gasMax = self.gas\n            self.km += gasMax\n            print(f\"fail: tanque vazio apos andar {gasMax} km\")\n            self.gas = 0\n\n\ndef main() -> None:\n    car = Car()\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            car.show()\n        elif args[0] == \"enter\":\n            car.enter()\n        elif args[0] == \"leave\":\n            car.leave()\n        elif args[0] == \"fuel\":\n            val = int(args[1])\n            car.fuel(val)\n        elif args[0] == \"drive\":\n            distance = int(args[1])\n            car.drive(distance)\n        else:\n            print(\"fail: comando invalido\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "80"
        }
    ]
}